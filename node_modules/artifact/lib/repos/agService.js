var Q = require('q'),
    config = require('../config'),
    fs = require('fs'),
    request = require('request');

module.exports = {
    upload: function(name, version, filename) {
        return postFile(name, version, filename).then(function(location) {
            return agServiceBaseUrl() + location;
        });
    }
};

function agServiceBaseUrl() {
    return config.registry.substring(0, config.registry.indexOf('/artifacts'));
}

function postFile(name, version, filename) {
    var deferred = Q.defer(),
        streamDeferred = Q.defer();
    var stream = fs.createReadStream(filename);

    var url = agServiceBaseUrl() + '/binary/' + name + '-' + version + '.tgz';

    stream.pipe(request.post(url, function(err, res) {
        if (err) {
            deferred.reject(err);
        } else {
            deferred.resolve(res);
        }
    }));

    stream.on('end', function() {
        streamDeferred.resolve();
    });
    return Q.all([deferred.promise, streamDeferred.promise]).then(function(postResult) {
        return postResult[0].headers.location;
    });
}
